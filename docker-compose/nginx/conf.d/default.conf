# ./docker/nginx/default.conf
log_format fmt_json escape=json '{'
    '"time": "$time_iso8601", '
    '"remote_addr": "$remote_addr", '
    '"server_name": "$server_name", '
    '"server_addr": "$server_addr", '
    '"known_client": $known_client, '
    '"has_access_to_limitless_zone": $has_access_to_limitless_zone, '
    '"limit_req_status": "$limit_req_status", '
    '"host": "$host", '
    '"method": "$request_method", '
    '"request": "$request_uri", '
    '"request_time": $request_time, '
    '"body_bytes_sent": $body_bytes_sent, '
    '"query": "$args", '
    '"status": $status, '
    '"http_user_agent": "$http_user_agent", '
    '"request_id": "$http_cf_ray", '
    '"referrer": "$http_referer", '
    '"hostname": "$hostname"'
'}';

geo $known_client {
    default         0;
    127.0.0.1       1;
    10.100.0.1      1;
}

# If a client sent a valid secret in the X-Limitless-Zone header, $has_access_to_limitless_zone variable is set to 1.
map $http_x_limitless_zone $has_access_to_limitless_zone {
    default 0;
    # As a regular expression to verify case.
    "~^abc ~`\!@\#\$%\^&\*\(\)_\+\-\=qwy\[\]\\\{\}\|asd;'\"jkl,\./\<\>\?xyz$" 1;
    "~^this\-one\-is\-rotated$" 1;
}

# "Limited" rate zone.
map "$known_client/$has_access_to_limitless_zone" $limited_zone_key {
    default "";
    "0/0" $binary_remote_addr;
}
limit_req_zone $limited_zone_key zone=limited_zone:10m rate=12r/m;

# "Limitless" rate zone (applies to our internal clients, still we do not allow unlimited requests to avoid
# errors that could kill our production api).
# The limit will be applied to the IP address of a specific client (not globally to all clients who know the secret).
# An empty value causes the limit to be not applied.
map "$known_client/$has_access_to_limitless_zone" $limitless_zone_key {
    default "";
    "1/0" $binary_remote_addr;
    "0/1" $binary_remote_addr;
    "1/1" $binary_remote_addr;
}
limit_req_zone $limitless_zone_key zone=limitless_zone:1m rate=20r/m;

map $request_uri $loggable {
    /healthcheck 0;
    default 1;
}

map $host $app_brand {
    default "project";

    "~*^api-(.+)\.localhost$" $1;
    "~*^api-(.+)\.local\.projectdev\.com$" $1;
}

server {
    server_name _;
    listen 80;

    root /var/www/public;

    location / {
        try_files $uri /index.php$is_args$args;
    }

    location ~ ^/index\.php(/|$) {
        #limit_req zone=limitless_zone burst=50; # nodelay
        #limit_req zone=limited_zone burst=60;
        #limit_req_status 429;

        client_max_body_size 50m;

        fastcgi_pass lsi-php:9000;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /app/public/index.php;
        fastcgi_param APP_BRAND $app_brand;
    }

    location /healthcheck {
        try_files $uri /healthcheck.php$is_args$args;
    }

    location ~ ^/healthcheck\.php(/|$) {
        fastcgi_pass lsi-php:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;

        # https://gist.github.com/magnetikonline/11312172#determine-fastcgi-response-sizes
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;

        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    error_log /dev/stderr debug;
    access_log /dev/stdout fmt_json if=$loggable;
}
